name: CI

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

env:
  NODE_VERSION: '20'
  INFURA_API_KEY: test_key

jobs:
  # Commitlint job - validate commit messages
  commitlint:
    runs-on: ubuntu-latest
    name: Validate commit messages
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4.4.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Validate current commit (push)
        if: github.event_name == 'push'
        run: npx commitlint --from HEAD~1 --to HEAD --verbose

      - name: Validate PR commits
        if: github.event_name == 'pull_request'
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

  # Test job - run your tests
  test:
    runs-on: ubuntu-latest
    - name: Set environment variable
      run: echo "INFURA_API_KEY=test_key" >> $GITHUB_ENV

    name: Run tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4.4.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm test
        env:
          INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}

      - name: Build project
        run: npm run build

  # Docker job - build and test Docker image
  docker:
    runs-on: ubuntu-latest
    name: Build and test Docker image
    needs: [commitlint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Build Docker image
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          push: false
          tags: infura-mcp-mcp-server:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
      # This requires username and password for docker login to be kept in secrets
      # - name: Test Docker image
      #   run: |
      #     # Start container
      #     docker run -d --name infura-mcp-test -p 3000:3000 \
      #       -e INFURA_API_KEY="${{ secrets.INFURA_API_KEY }}" \
      #       infura-mcp-mcp-server:test
          
      #     # Wait for startup
      #     sleep 10
          
      #     # Test health endpoint
      #     curl -f http://localhost:3000/health
          
      #     # Check logs
      #     docker logs infura-mcp-test
          
      #     # Cleanup
      #     docker stop infura-mcp-test